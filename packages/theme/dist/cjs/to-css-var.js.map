{"version":3,"file":"to-css-var.js","names":["_themeTokens","require","_createThemeVars2","toCSSVar","rawTheme","_theme$config","theme","omitVars","token","extractTokens","cssVarPrefix","config","_createThemeVars","createThemeVars","cssMap","cssVars","Object","assign","__cssVars","__cssMap"],"sources":["../../src/to-css-var.ts"],"sourcesContent":["import { Dict, WithCSSVar } from '@shtcut-ui/utils';\nimport { extractTokens, omitVars } from './create-theme-vars/theme-tokens';\nimport { createThemeVars } from './create-theme-vars/create-theme-vars';\n\n/**\n * The `toCSSVar` function converts a raw theme object into a theme object with CSS variables.\n * @param {T} rawTheme - The `rawTheme` parameter is an object that represents the raw theme data. It\n * should be a dictionary-like object with key-value pairs representing the theme properties and their\n * values. The type `T` is a generic type that extends the `Dict` type, which is a type alias for `{ [\n * @returns the `theme` object with two additional properties: `__cssVars` and `__cssMap`. The `theme`\n * object is casted to type `WithCSSVar<T>`, which is a generic type that extends the original `Dict`\n * type.\n */\nexport function toCSSVar<T extends Dict>(rawTheme: T) {\n  /**\n   * In the case the theme has already been converted to css-var(e.g extending the theme),\n   * we can omit the compted css vars and recompute it for the extended theme,\n   */\n  const theme = omitVars(rawTheme);\n\n  // omit components and breakpoints from  css variable map\n  const token = extractTokens(theme);\n\n  const cssVarPrefix = theme.config?.cssVarPrefix || 'vc';\n\n  const {\n    /**\n     * This is more like a dictionary of tokens users will type `green.500`,\n     * and their equivalent css variable\n     */\n    cssMap,\n    /**\n     * The extracted css variables will be stored here and used in\n     * the emotion's <Global/> component to attach variables to `:root`\n     */\n    cssVars,\n  } = createThemeVars(token, { cssVarPrefix });\n\n  Object.assign(theme, {\n    __cssVars: cssVars,\n    __cssMap: cssMap,\n  });\n  return theme as WithCSSVar<T>;\n}\n"],"mappings":";;;;AACA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,QAAQA,CAAiBC,QAAW,EAAE;EAAA,IAAAC,aAAA;EACpD;AACF;AACA;AACA;EACE,IAAMC,KAAK,GAAG,IAAAC,qBAAQ,EAACH,QAAQ,CAAC;;EAEhC;EACA,IAAMI,KAAK,GAAG,IAAAC,0BAAa,EAACH,KAAK,CAAC;EAElC,IAAMI,YAAY,GAAG,EAAAL,aAAA,GAAAC,KAAK,CAACK,MAAM,qBAAZN,aAAA,CAAcK,YAAY,KAAI,IAAI;EAEvD,IAAAE,gBAAA,GAWI,IAAAC,iCAAe,EAACL,KAAK,EAAE;MAAEE,YAAY,EAAZA;IAAa,CAAC,CAAC;IAN1CI,MAAM,GAAAF,gBAAA,CAANE,MAAM;IAKNC,OAAO,GAAAH,gBAAA,CAAPG,OAAO;EAGTC,MAAM,CAACC,MAAM,CAACX,KAAK,EAAE;IACnBY,SAAS,EAAEH,OAAO;IAClBI,QAAQ,EAAEL;EACZ,CAAC,CAAC;EACF,OAAOR,KAAK;AACd"}