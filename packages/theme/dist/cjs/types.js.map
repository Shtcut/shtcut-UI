{"version":3,"file":"types.js","names":[],"sources":["../../src/types.ts"],"sourcesContent":["import { DeepPartials, Dict } from '@shtcut-ui/utils';\nimport type { BaseTheme, CSSProperties, MaybeArray } from '@twind/core';\n\nexport type RecursiveProp<N = string | number> = RecursiveObject<N> | N;\n\ndeclare module '@twind/core' {\n  export interface CustomProps {\n    '--sht-backdrop-blur'?: string;\n    '--sht-backdrop-brightness'?: string;\n    '--sht-backdrop-contrast'?: string;\n    '--sht-backdrop-grayscale'?: string;\n    '--sht-backdrop-hue-rotate'?: string;\n    '--sht-backdrop-invert'?: string;\n    '--sht-backdrop-opacity'?: string;\n    '--sht-backdrop-saturate'?: string;\n    '--sht-backdrop-sepia'?: string;\n    '--sht-bg-opacity'?: string | number;\n    '--sht-blur'?: string;\n    '--sht-border-opacity'?: string | number;\n    '--sht-border-spacing-x'?: string | number;\n    '--sht-border-spacing-y'?: string | number;\n    '--sht-brightness'?: string;\n    '--sht-contrast'?: string;\n    '--sht-divide-opacity'?: string | number;\n    '--sht-divide-x-reverse'?: string | number;\n    '--sht-divide-y-reverse'?: string | number;\n    '--sht-drop-shadow'?: string;\n    '--sht-gradient-from'?: string;\n    '--sht-gradient-stops'?: string;\n    '--sht-gradient-to'?: string;\n    '--sht-gradient-via'?: string;\n    '--sht-grayscale'?: string;\n    '--sht-hue-rotate'?: string;\n    '--sht-invert'?: string;\n    '--sht-numeric-figure'?: string;\n    '--sht-numeric-fraction'?: string;\n    '--sht-numeric-spacing'?: string;\n    '--sht-opacity'?: string | number;\n    '--sht-ordinal'?: string;\n    '--sht-placeholder-opacity'?: string;\n    '--sht-ring-color'?: string;\n    '--sht-ring-inset'?: string;\n    '--sht-ring-offset-color'?: string;\n    '--sht-ring-offset-shadow'?: string;\n    '--sht-ring-offset-width'?: string;\n    '--sht-ring-opacity'?: string | number;\n    '--sht-ring-shadow'?: string;\n    '--sht-rotate'?: string;\n    '--sht-saturate'?: string;\n    '--sht-scale-x'?: string;\n    '--sht-scale-y'?: string;\n    '--sht-sepia'?: string;\n    '--sht-shadow'?: string;\n    '--sht-shadow-color'?: string;\n    '--sht-shadow-colored'?: string;\n    '--sht-skew-x'?: string;\n    '--sht-skew-y'?: string;\n    '--sht-slashed-zero'?: string;\n    '--sht-scroll-snap-strictness'?: string;\n    '--sht-text-opacity'?: string;\n    '--sht-pan-x'?: string;\n    '--sht-pan-y'?: string;\n    '--sht-pinch-zoom'?: string;\n    '--sht-touch-action'?: string;\n    '--sht-transform'?: string;\n    '--sht-translate-x'?: string;\n    '--sht-translate-y'?: string;\n  }\n}\n\nexport interface RecursiveObject<N = string | number> {\n  [p: string]: RecursiveProp<N>;\n}\n\nexport interface ColorHues {\n  50: string;\n  100: string;\n  200: string;\n  300: string;\n  400: string;\n  500: string;\n  600: string;\n  700: string;\n  800: string;\n  900: string;\n}\n\nexport type Colors = RecursiveObject<Record<string, Partial<ColorHues>> | string>;\n\nexport interface ColorScheme {\n  id: string;\n  type: 'light' | 'dark';\n  colors: {\n    bg: {\n      base: string;\n      fill: string;\n    };\n    text: {\n      foreground: string;\n      muted: string;\n    };\n    primary: ColorHues;\n    neutral: ColorHues;\n  } & Colors;\n}\n\nexport interface Density {}\n\nexport type FontSizeValue =\n  | string\n  | [size: string, lineHeight: string]\n  | [size: string, options: { lineHeight?: string; letterSpacing?: string; fontWeight?: string }];\n\nexport type FontFamilyValue =\n  | MaybeArray<string>\n  | [fontFamily: MaybeArray<string>, configuration: { fontFeatureSettings?: string }];\n\nexport type Container = {\n  screen?: BaseTheme['screens'];\n  center?: boolean;\n  padding?: string | Dict<string>;\n};\n\nexport interface ShtcutUiTheme {\n  readonly cursor: 'default' | 'pointer';\n  readonly rounded: string;\n  readonly colorSchemes: Record<string, ColorScheme>;\n  readonly density: Record<'compact' | 'comfortable' | 'unset', Density>;\n  readonly config: Record<string, unknown>;\n}\n\nexport interface DefaultProps {\n  className?: string;\n}\n\nexport type ShtcutThemeOverride = DeepPartials<ShtcutUiTheme>;\n\ntype BaseThemeColor = BaseTheme['colors'];\ntype DictString = Dict<string>;\ntype DictMaybeArray = Dict<MaybeArray<string>>;\n\nexport type ShtcutTheme = BaseTheme & {\n  columns: DictString;\n  spacing: Dict<string>;\n  durations: DictMaybeArray;\n\n  accentColor: BaseThemeColor;\n  animation: DictMaybeArray;\n  aria: DictString;\n  aspectRatio: DictString;\n\n  backdropBlur: DictString;\n  backdropBrightness: DictString;\n  backdropContrast: DictString;\n  backdropGrayscale: DictString;\n  backdropInvert: DictString;\n  backdropOpacity: DictString;\n  backdropSaturate: DictString;\n  backdropSepia: DictString;\n\n  backgroundColor: BaseThemeColor;\n  backgroundImage: DictMaybeArray;\n  backgroundOpacity: DictString;\n  backgroundPosition: DictString;\n  backgroundSize: DictString;\n\n  blur: DictString;\n  borderColor: BaseThemeColor;\n  borderOpacity: DictString;\n  borderRadius: DictString;\n  borderSpacing: DictString;\n  borderWidth: DictString;\n\n  boxShadow: DictString;\n  boxShadowColor: BaseThemeColor;\n  brightness: DictString;\n  caretColor: BaseThemeColor;\n  container: Container;\n  content: DictString;\n  contrast: Dict<string>;\n  cursor: DictString;\n\n  data: DictString;\n  divideColor: BaseThemeColor;\n  divideOpacity: DictString;\n  divideWidth: DictString;\n  dropShadow: DictMaybeArray;\n\n  fill: BaseThemeColor;\n  flex: DictString;\n  flexBasis: DictString;\n  fontWeight: DictString;\n  flexGrow: Dict<string | number>;\n  flexShrink: Dict<string | number>;\n  fontFamily: Dict<FontFamilyValue>;\n  fontSize: Dict<FontSizeValue>;\n\n  gap: DictString;\n  gradientColorStops: BaseThemeColor;\n  grayscale: DictString;\n  gridAutoColumns: DictString;\n  gridAutoRows: DictString;\n  gridColumn: DictString;\n  gridColumnEnd: DictString;\n  gridColumnStart: DictString;\n  gridRow: DictString;\n  gridRowEnd: DictString;\n  gridRowStart: DictString;\n  gridTemplateColumns: DictString;\n  gridTemplateRows: DictString;\n\n  height: Record<string, string>;\n  hueRotate: DictString;\n\n  inset: DictString;\n  invert: DictString;\n\n  keyframes: Dict<Record<string, CSSProperties>>;\n\n  letterSpacing: DictString;\n  lineHeight: DictString;\n  listStyleType: DictString;\n\n  margin: DictString;\n  maxHeight: DictString;\n  maxWidth: DictString;\n  minHeight: DictString;\n  minWidth: DictString;\n\n  objectPosition: DictString;\n  opacity: DictString;\n  order: DictString;\n  outlineColor: BaseThemeColor;\n  outlineOffset: DictString;\n  outlineWidth: DictString;\n\n  padding: DictString;\n  placeholderColor: BaseThemeColor;\n  placeholderOpacity: DictString;\n\n  ringColor: BaseThemeColor;\n  ringOffsetColor: BaseThemeColor;\n  ringOffsetWidth: DictString;\n  ringOpacity: DictString;\n  ringWidth: DictString;\n  rotate: DictString;\n\n  saturate: DictString;\n  scale: DictString;\n  scrollMargin: DictString;\n  scrollPadding: DictString;\n  sepia: DictString;\n  skew: DictString;\n  space: DictString;\n  stroke: BaseThemeColor;\n  strokeWidth: DictString;\n  supports: DictString;\n\n  textColor: BaseThemeColor;\n  textDecorationColor: BaseThemeColor;\n  textDecorationThickness: DictString;\n  textIndent: DictString;\n  textOpacity: DictString;\n  textUnderlineOffset: DictString;\n  transformOrigin: DictString;\n  transitionDelay: DictMaybeArray;\n  transitionDuration: DictString;\n  transitionProperty: DictString;\n  transitionTimingFunction: DictString;\n  translate: DictString;\n\n  width: DictString;\n  willChange: DictString;\n\n  zIndex: DictString;\n};\n"],"mappings":""}