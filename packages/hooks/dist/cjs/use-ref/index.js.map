{"version":3,"file":"index.js","names":["_react","require","setRef","ref","value","current","useForkRef","refA","refB","useMemo","refValue"],"sources":["../../../src/use-ref/index.ts"],"sourcesContent":["import { useMemo } from 'react';\n\ntype ReactRef<T> = React.Ref<T> | React.RefObject<T> | React.MutableRefObject<T>;\n\nexport function setRef<T = any>(ref: ReactRef<T> | undefined, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    // @ts-ignore\n    ref.current = value;\n  }\n}\n\nexport function useForkRef<T = any>(refA: ReactRef<T> | undefined, refB: ReactRef<T> | undefined) {\n  return useMemo(() => {\n    if (refA == null && refB == null) {\n      return null;\n    }\n    return (refValue: T) => {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAIO,SAASC,MAAMA,CAAUC,GAA4B,EAAEC,KAAQ,EAAE;EACtE,IAAI,OAAOD,GAAG,KAAK,UAAU,EAAE;IAC7BA,GAAG,CAACC,KAAK,CAAC;EACZ,CAAC,MAAM,IAAID,GAAG,EAAE;IACd;IACAA,GAAG,CAACE,OAAO,GAAGD,KAAK;EACrB;AACF;AAEO,SAASE,UAAUA,CAAUC,IAA6B,EAAEC,IAA6B,EAAE;EAChG,OAAO,IAAAC,cAAO,EAAC,YAAM;IACnB,IAAIF,IAAI,IAAI,IAAI,IAAIC,IAAI,IAAI,IAAI,EAAE;MAChC,OAAO,IAAI;IACb;IACA,OAAO,UAACE,QAAW,EAAK;MACtBR,MAAM,CAACK,IAAI,EAAEG,QAAQ,CAAC;MACtBR,MAAM,CAACM,IAAI,EAAEE,QAAQ,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACH,IAAI,EAAEC,IAAI,CAAC,CAAC;AAClB"}