{"version":3,"file":"index.js","names":["Children","isValidElement","getValidChildren","children","toArray","filter","child"],"sources":["../../../src/children/index.ts"],"sourcesContent":["import { Children, isValidElement } from 'react';\n\n/**\n * The function `getValidChildren` filters out invalid React elements from a given array of children.\n * @param children - The `children` parameter is of type `React.ReactNode`, which is a type that\n * represents the children of a React component. It can be any valid React node, such as a React\n * element, a string, a number, or an array of React nodes.\n * @returns an array of valid React elements.\n */\nexport function getValidChildren(children: React.ReactNode) {\n  return Children.toArray(children).filter((child) => isValidElement(child)) as React.ReactElement[];\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,OAAO;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,QAAyB,EAAE;EAC1D,OAAOH,QAAQ,CAACI,OAAO,CAACD,QAAQ,CAAC,CAACE,MAAM,CAAEC,KAAK,iBAAKL,cAAc,CAACK,KAAK,CAAC,CAAC;AAC5E"}